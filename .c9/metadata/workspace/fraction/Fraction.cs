{"filter":false,"title":"Fraction.cs","tooltip":"/fraction/Fraction.cs","undoManager":{"mark":1,"position":1,"stack":[[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":99,"column":0},"action":"insert","lines":["using System;","using System.Collections.Generic;","using System.Linq;","using System.Text;","using System.Threading.Tasks;","","namespace fraction","{","    class Fraction","    {","        private int _numerator;","        private int _denominator;","","        public Fraction()","        {","        }","","        public Fraction(int numerator, int denominator)","        {","            getNumerator = numerator;","            getDenominator = denominator;","            ","            //Console.WriteLine(\"Ditt bråktal är {0}/{1}\", numerator, denominator);","        }","","        public int getNumerator","        {","            //int numerator = ReadInt(\"Ange nämnare: \");","            get { return _numerator; }","            set","            {","                _numerator = value;","            }","        }","","        public int getDenominator","        {","            get { return _denominator; }","            set","            {","                _denominator = value;","            }","        }","","        public bool isNegative(int numerator, int denominator)","        {","            if (numerator < 0 || denominator < 0)","            {","                return true;","            }","            else","            {","                return false;","            }","        }","","        public Fraction add(Fraction fraction1, Fraction fraction2)","        {","            if (fraction1.getDenominator == fraction2.getDenominator)","            {","                return new Fraction(fraction1.getNumerator + fraction2.getNumerator, fraction1.getDenominator);","            }","            else","            {","                //int numerator1 = fraction1.getNumerator * fraction2.getDenominator;","                //int denomerator1 = fraction1.getDenominator * fraction2.getDenominator;","                //+","                //fraction2.getNumerator * fraction1.getDenominator","                //fraction2.getDenominator * fraction1.getDenominator","                return new Fraction(((fraction1.getNumerator * fraction2.getDenominator) + (fraction2.getNumerator * fraction1.getDenominator)), (fraction1.getDenominator * fraction2.getDenominator));","            }","            ","        }","","        public Fraction multiply(Fraction fraction1, Fraction fraction2)","        {","            return new Fraction(fraction1.getNumerator * fraction2.getNumerator, fraction1.getDenominator * fraction2.getDenominator);","        }","","        public bool isEqualTo(Fraction fraction1, Fraction fraction2)","        {","            if ((fraction1.getNumerator / fraction1.getDenominator) == (fraction2.getNumerator / fraction2.getDenominator))","            {","                return true;","            }","            else","            {","                return false;","            }","        }","","        public override string ToString()","        {","            return String.Format(\"{0}/{1}\", getNumerator, getDenominator);","        }","","        ","    }","}",""]}]}],[{"group":"doc","deltas":[{"start":{"row":98,"column":1},"end":{"row":99,"column":0},"action":"remove","lines":["",""]}]}]]},"ace":{"folds":[],"scrolltop":1581,"scrollleft":9,"selection":{"start":{"row":98,"column":1},"end":{"row":98,"column":1},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":5,"state":"start","mode":"ace/mode/csharp"}},"timestamp":1416861531102,"hash":"5e80da97872737b4ef51dfc1a58619cfc8927582"}